//
// SFTPDatasetDef.h
// 
// Created by Ha Do on March 18, 2019
// Modified by Ha Do on March 18, 2019
// Copyright (c) 2018-18 N2N-AFE (Hong Kong) Limited. All rights reserved.
//

#include <map>

#pragma region FileSize - size of each row
#define FILE_SIZE_CHANGE_OF_CONTRACT		189	
#define FILE_SIZE_D_TO_MBR					626
#define FILE_SIZE_SBR_TO_MBR				1054	
#define FILE_SIZE_DELISTED_INSTRUMENT		373
#define FILE_SIZE_TRADING_SCHEDULE			50
#define FILE_SIZE_HOLIDAY					169
#define FILE_SIZE_MEMBER_TRADER				160
#define FILE_SIZE_MARKET_MAKING_CONTRACT	67
#define FILE_SIZE_ETF_INDEX_COMPOSITION		263
#define FILE_SIZE_COUPON_PAYMENT_DATE		129
#pragma endregion

#pragma region TransactionCode

#define TAIL						"99999999999"
#define CODE_CHANGE_OF_CONTRACT		"TTSREP10009"
#define CODE_D_TO_MBR				"TRDGES0II10"
#define CODE_SBR_TO_MBR				"TRDGES0II20"
#define CODE_DELISTED_INSTRUMENT	"TRDGES0DII0"
#define CODE_TRADING_SCHEDULE		"TRDGES0BSC0"
#define CODE_HOLIDAY				"TRDGES0HOL0"
#define CODE_MEMBER_TRADER			"TRDGES0MBT0"
#define CODE_MARKET_MAKING_CONTRACT "TRDGES0MMC0"
#define CODE_ETF_INDEX_COMPOSITION	"TRDGES0EIC0"
#define CODE_COUPON_PAYMENT_DATE	"TRDGES0BCF0"

#pragma endregion

// Data length
#pragma region ChangeOfContract

// data length
#define LENGTH_TRANSACTION_CODE					11
#define LENGTH_SEQUENCE_NUMBER					11
#define LENGTH_MARKET_ID						3
#define LENGTH_BOARD_ID							2
#define LENGTH_SYMBOL							12
#define LENGTH_REPO_BASE_SYMBOLCODE				12
#define LENGTH_TRADE_NUMBER						11
#define LENGTH_1ST_TRADING_DATE					8
#define LENGTH_2ND_TRADING_DATE					8
#define LENGTH_SETTLEMENT_DATE					8
#define LENGTH_REPO_REAL_PERIOD					4
#define LENGTH_TRADE_PRICE						15
#define LENGTH_TRADE_QUANTITY					10
#define LENGTH_TRADING_VALUE					23
#define LENGTH_REPURCHASEMENT_AMOUNT			23
#define LENGTH_REPO_CONTRACT_CHANGE_REASON		1
#define LENGTH_MEMBER_NUMBER					5
#define LENGTH_TRADER_ID						5	
#define LENGTH_ORDER_ID							17

enum ChangeOfContract{
	COC_SEQ_TRANSACTION_CODE = 1,
	COC_SEQ_SEQUENCE_NUMBER,
	COC_SEQ_MARKET_ID,
	COC_SEQ_BOARD_ID,
	COC_SEQ_SYMBOL,
	COC_SEQ_REPO_BASE_SYMBOLCODE,
	COC_SEQ_TRADE_NUMBER,
	COC_SEQ_1ST_TRADING_DATE,
	COC_SEQ_2ND_TRADING_DATE,
	COC_SEQ_SETTLEMENT_DATE,
	COC_SEQ_REPO_REAL_PERIOD,
	COC_SEQ_TRADE_PRICE,
	COC_SEQ_TRADE_QUANTITY,
	COC_SEQ_TRADING_VALUE,
	COC_SEQ_REPURCHASEMENT_AMOUNT,
	COC_SEQ_REPO_CONTRACT_CHANGE_REASON,
	COC_SEQ_MEMBER_NUMBER,
	COC_SEQ_TRADER_ID,
	COC_SEQ_ORDER_ID
};
#pragma endregion

#pragma region DToMBR
// data length
#define LENGTH_BUSINESS_DATE					8
#define LENGTH_SECURITY_EXCHANGE				2
#define LENGTH_PRODUCT_GROUP_ID					3
#define LENGTH_SYMBOL_SHORT_CODE				9
#define LENGTH_SECURITY_GROUP_ID				2
#define LENGTH_TRADING_CURRENCY_ID				1
#define LENGTH_PRODUCT_ID						11
#define LENGTH_TICKER_CODE						20
#define LENGTH_SYMBOL_NAME						120
#define LENGTH_SYMBOL_ABBREVIATION				60
#define LENGTH_SYMBOL_ENGLISHNAME				80
#define LENGTH_SYMBOL_ENGLISH_ABBREVIATION		40
#define LENGTH_LISTING_DATE						8
#define LENGTH_TRADING_CURRENCYISO_CODE			3
#define LENGTH_SETTLEMENT_MULTIPLIER			22
#define LENGTH_CLOSING_PRICE					15
#define LENGTH_CLOSING_PRICE_TYPECODE			1
#define LENGTH_REFERENCE_PRICE					15
#define LENGTH_UPPER_LIMIT_PRICE				15
#define LENGTH_LOWER_LIMIT_PRICE				15
#define LENGTH_MARKET_MAKINGPOSSIBLE_YN			1
#define LENGTH_HALT_YN							1
#define LENGTH_LIQUIDATION_TRADING_YN			1
#define LENGTH_UNDERLYING_ID					3
#define LENGTH_EXPIRATION_MONTH					6
#define LENGTH_LAST_TRADING_DATE				8
#define LENGTH_EXPIRATION_DATE					8
#define LENGTH_FINAL_SETTLEMENT_DATE			8
#define LENGTH_LAST_SETTLEMENT_METHOD_CODE		1
#define LENGTH_EXERCISE_TYPE_CODE				1
#define LENGTH_ADJUSTMENT_TYPECODE				1
#define LENGTH_UNDERLYING_SYMBOLCODE			12
#define LENGTH_REMAINING_DAYS					8
#define LENGTH_SETTLEMENT_PRICE					18
#define LENGTH_RIGHTS_TYPE_CODE					1
#define LENGTH_ATM_TYPE_CODE					1
#define LENGTH_EXERCISE_PRICE					18
#define LENGTH_SPREAD_COMPOSITIONCODE			2
#define LENGTH_SPREAD_COMPOSITION_SYMBOL_CODE_1 12
#define LENGTH_SPREAD_COMPOSITION_SYMBOL_CODE_2 12

enum DToMBR{
	DTOMBR_SEQ_TRANSACTION_CODE = 1,
	DTOMBR_SEQ_SEQUENCE_NUMBER,
	DTOMBR_SEQ_BUSINESS_DATE,
	DTOMBR_SEQ_MARKET_ID,
	DTOMBR_SEQ_SYMBOL,
	DTOMBR_SEQ_BOARD_ID,
	DTOMBR_SEQ_SECURITY_EXCHANGE,
	DTOMBR_SEQ_PRODUCT_GROUP_ID,
	DTOMBR_SEQ_SYMBOL_SHORT_CODE,
	DTOMBR_SEQ_SECURITY_GROUP_ID,
	DTOMBR_SEQ_TRADING_CURRENCY_ID,
	DTOMBR_SEQ_PRODUCT_ID,
	DTOMBR_SEQ_TICKER_CODE,
	DTOMBR_SEQ_SYMBOL_NAME,
	DTOMBR_SEQ_SYMBOL_ABBREVIATION,
	DTOMBR_SEQ_SYMBOL_ENGLISHNAME,
	DTOMBR_SEQ_SYMBOL_ENGLISH_ABBREVIATION,
	DTOMBR_SEQ_LISTING_DATE,
	DTOMBR_SEQ_TRADING_CURRENCYISO_CODE,
	DTOMBR_SEQ_SETTLEMENT_MULTIPLIER,
	DTOMBR_SEQ_PRICE_INTEGER_SUB_PARTVALID_CIPHER,
	DTOMBR_SEQ_PRICE_DECIMAL_SUBPART_VALID_CIPHER,
	DTOMBR_SEQ_CLOSING_PRICE,
	DTOMBR_SEQ_CLOSING_PRICE_TYPECODE,
	DTOMBR_SEQ_FIRST_TRADING_DATE,
	DTOMBR_SEQ_REFERENCE_PRICE,
	DTOMBR_SEQ_UPPER_LIMIT_PRICE,
	DTOMBR_SEQ_LOWER_LIMIT_PRICE,
	DTOMBR_SEQ_MARKET_MAKINGPOSSIBLE_YN,
	DTOMBR_SEQ_HALT_YN,
	DTOMBR_SEQ_LIQUIDATION_TRADING_YN,
	DTOMBR_SEQ_UNDERLYING_ID,
	DTOMBR_SEQ_EXPIRATION_MONTH,
	DTOMBR_SEQ_LAST_TRADING_DATE,
	DTOMBR_SEQ_EXPIRATION_DATE,
	DTOMBR_SEQ_FINAL_SETTLEMENT_DATE,
	DTOMBR_SEQ_LAST_SETTLEMENT_METHOD_CODE,
	DTOMBR_SEQ_EXERCISE_TYPE_CODE,
	DTOMBR_SEQ_ADJUSTMENT_TYPECODE,
	DTOMBR_SEQ_UNDERLYING_SYMBOLCODE,
	DTOMBR_SEQ_REMAINING_DAYS,
	DTOMBR_SEQ_SETTLEMENT_PRICE,
	DTOMBR_SEQ_RIGHTS_TYPE_CODE,
	DTOMBR_SEQ_ATM_TYPE_CODE,
	DTOMBR_SEQ_EXERCISE_PRICE,
	DTOMBR_SEQ_SPREAD_COMPOSITIONCODE,
	DTOMBR_SEQ_SPREAD_COMPOSITION_SYMBOL_CODE_1,
	DTOMBR_SEQ_SPREAD_COMPOSITION_SYMBOL_CODE_2
};
#pragma endregion

#pragma region SBRToMBR

// data length
#define LENGTH_VWAP										15
#define LENGTH_PAR_VALUE								15
#define LENGTH_ISSUED_DATE								8
#define LENGTH_LISTED_SHARES							16
#define LENGTH_DELISTED_DATE							8
#define LENGTH_REPRESENTATIVE_SYMBOL_CODE				12
#define LENGTH_STOCK_KIND_CODE							2
#define LENGTH_PRICE_CHANGE_TYPECODE					1
#define LENGTH_OFF_TYPE_CODE							2
#define LENGTH_TARGET_STOCK_SYMBOLCODE					12
#define LENGTH_VALUATION_PRICE							15
#define LENGTH_LOWEST_ORDER_PRICE						15
#define LENGTH_HIGHEST_ORDER_PRICE						15
#define LENGTH_REDEMPTION_DATE							8
#define LENGTH_BOND_CLASSIFICATIONCODE					10
#define LENGTH_ISSUER_ID								10
#define LENGTH_CLOSING_PRICE_YIELD						13
#define LENGTH_COUPON_PAYMENTMETHOD_CODE				2
#define LENGTH_INTEREST_PAYMENT_CALCULATION_MONTHS		4
#define LENGTH_ACCRUED_INTEREST_BASEDAYS_TYPE_CODE		2
#define LENGTH_DISCOUNT_RATE_BONDBASE_DAYS_TYPE_CODE	2
#define LENGTH_DISCOUNT_RATE_BOND_YN					1
#define LENGTH_BOND_INTERESTPAYMENT_DATE_BASETYPE_CODE	1
#define LENGTH_FIRST_INTEREST_PAYMENTDATE				8
#define LENGTH_INTEREST_MONTH_ENDTYPE_CODE				1
#define LENGTH_INTEREST_PRE_PAY_ORPOST_PAY_TYPE_CODE	1
#define LENGTH_RISK_BONDREDEMPTION_TYPECODE				1
#define LENGTH_INTEREST_CALCULATION_MINIMUM_PRICE_UNIT	15
#define LENGTH_INTEREST_ROUNDINGMETHOD_CODE				1
#define LENGTH_EX_INTEREST_DATE							8
#define LENGTH_FRN_BASE_INTERESTCODE					2
#define LENGTH_FRN_SPREAD								14
#define LENGTH_FRN_NEXT_PERIODBASE_INTEREST				14
#define LENGTH_FRN_AFTER_NEXTPERIOD_BASE_INTEREST		14
#define LENGTH_INDEX_CALCULATIONINSTITUTION_CODE		1
#define LENGTH_INDEX_MARKETCLASSIFICATION_ID			6
#define LENGTH_INDEX_SEQUENCE							3
#define LENGTH_INDEX_LEVERAGEINVERSE_TYPE_CODE			2
#define LENGTH_LAST_SETTLEMENTMETHOD_CODE				1
#define LENGTH_LAST_TRADING_DATE						8
#define LENGTH_RIGHTS_TYPE_CODE							1
#define LENGTH_EXERCISE_PRICE							18
#define LENGTH_ISSUING_MARKETPARTICIPANT_NUMBER			5
#define LENGTH_ELW_CONVERSIONRATIO						13
#define LENGTH_ELW_PAYMENT_AGENTNAME					120
#define LENGTH_ELW_PAYMENT_DATE							8
#define LENGTH_SUBSCRIPTION_RIGHTSDELISTING_DATE		8
#define LENGTH_ANNUAL_BASE_DAYS							4
#define LENGTH_REPO_PERIOD								4
#define LENGTH_REPO_HAIRCUT_RATIO						7
#define LENGTH_MARKET_VALUE_PRICE						15
#define LENGTH_FOREIGN_BUY_SIDEPOSSIBLE_QUANTITY		15
#define LENGTH_FOREIGNER_HOLDINGSHARES					15
#define LENGTH_FOREIGNER_ORDER_LIMITQUANTITY			15
#define LENGTH_SYMBOL_ADMINISTRATIVE_STATUSCODE			3
#define LENGTH_SYMBOL_TRADINGMETHOD_STATUS_CODE			3
#define LENGTH_SYMBOL_TRADINGSANCTION_STATUS_CODE		3

enum SBRToMBR{
	SBRTOMBR_SEQ_TRANSACTION_CODE = 1,
	SBRTOMBR_SEQ_SEQUENCE_NUMBER,
	SBRTOMBR_SEQ_BUSINESS_DATE,
	SBRTOMBR_SEQ_MARKET_ID,
	SBRTOMBR_SEQ_SYMBOL,
	SBRTOMBR_SEQ_BOARD_ID,
	SBRTOMBR_SEQ_SECURITY_EXCHANGE,
	SBRTOMBR_SEQ_PRODUCT_GROUP_ID,
	SBRTOMBR_SEQ_SYMBOL_SHORT_CODE,
	SBRTOMBR_SEQ_SECURITY_GROUP_ID,
	SBRTOMBR_SEQ_TRADING_CURRENCY_ID,
	SBRTOMBR_SEQ_PRODUCT_ID,
	SBRTOMBR_SEQ_TICKER_CODE,
	SBRTOMBR_SEQ_SYMBOL_NAME,
	SBRTOMBR_SEQ_SYMBOL_ABBREVIATION,
	SBRTOMBR_SEQ_SYMBOL_ENGLISHNAME,
	SBRTOMBR_SEQ_SYMBOL_ENGLISH_ABBREVIATION,
	SBRTOMBR_SEQ_LISTING_DATE,
	SBRTOMBR_SEQ_TRADING_CURRENCYISO_CODE,
	SBRTOMBR_SEQ_PRICE_INTEGER_SUB_PARTVALID_CIPHER,
	SBRTOMBR_SEQ_PRICE_DECIMAL_SUBPART_VALID_CIPHER,
	SBRTOMBR_SEQ_CLOSING_PRICE,
	SBRTOMBR_SEQ_CLOSING_PRICE_TYPECODE,
	SBRTOMBR_SEQ_FIRST_TRADING_DATE,
	SBRTOMBR_SEQ_VWAP,
	SBRTOMBR_SEQ_REFERENCE_PRICE,
	SBRTOMBR_SEQ_UPPER_LIMIT_PRICE,
	SBRTOMBR_SEQ_LOWER_LIMIT_PRICE,
	SBRTOMBR_SEQ_MARKET_MAKINGPOSSIBLE_YN,
	SBRTOMBR_SEQ_HALT_YN,
	SBRTOMBR_SEQ_LIQUIDATION_TRADING_YN,
	SBRTOMBR_SEQ_PAR_VALUE,
	SBRTOMBR_SEQ_ISSUED_DATE,
	SBRTOMBR_SEQ_LISTED_SHARES,
	SBRTOMBR_SEQ_DELISTED_DATE,
	SBRTOMBR_SEQ_REPRESENTATIVE_SYMBOL_CODE,
	SBRTOMBR_SEQ_STOCK_KIND_CODE,
	SBRTOMBR_SEQ_PRICE_CHANGE_TYPECODE,
	SBRTOMBR_SEQ_OFF_TYPE_CODE,
	SBRTOMBR_SEQ_TARGET_STOCK_SYMBOLCODE,
	SBRTOMBR_SEQ_VALUATION_PRICE,
	SBRTOMBR_SEQ_LOWEST_ORDER_PRICE,
	SBRTOMBR_SEQ_HIGHEST_ORDER_PRICE,
	SBRTOMBR_SEQ_REDEMPTION_DATE,
	SBRTOMBR_SEQ_BOND_CLASSIFICATIONCODE,
	SBRTOMBR_SEQ_ISSUER_ID,
	SBRTOMBR_SEQ_CLOSING_PRICE_YIELD,
	SBRTOMBR_SEQ_COUPON_PAYMENTMETHOD_CODE,
	SBRTOMBR_SEQ_INTEREST_PAYMENT_CALCULATION_MONTHS,
	SBRTOMBR_SEQ_ACCRUED_INTEREST_BASEDAYS_TYPE_CODE,
	SBRTOMBR_SEQ_DISCOUNT_RATE_BONDBASE_DAYS_TYPE_CODE,
	SBRTOMBR_SEQ_DISCOUNT_RATE_BOND_YN,
	SBRTOMBR_SEQ_BOND_INTERESTPAYMENT_DATE_BASETYPE_CODE,
	SBRTOMBR_SEQ_FIRST_INTEREST_PAYMENTDATE,
	SBRTOMBR_SEQ_INTEREST_MONTH_ENDTYPE_CODE,
	SBRTOMBR_SEQ_INTEREST_PRE_PAY_ORPOST_PAY_TYPE_CODE,
	SBRTOMBR_SEQ_RISK_BONDREDEMPTION_TYPECODE,
	SBRTOMBR_SEQ_INTEREST_CALCULATION_MINIMUM_PRICE_UNIT,
	SBRTOMBR_SEQ_INTEREST_ROUNDINGMETHOD_CODE,
	SBRTOMBR_SEQ_EX_INTEREST_DATE,
	SBRTOMBR_SEQ_FRN_BASE_INTERESTCODE,
	SBRTOMBR_SEQ_FRN_SPREAD,
	SBRTOMBR_SEQ_FRN_NEXT_PERIODBASE_INTEREST,
	SBRTOMBR_SEQ_FRN_AFTER_NEXTPERIOD_BASE_INTEREST,
	SBRTOMBR_SEQ_INDEX_CALCULATIONINSTITUTION_CODE,
	SBRTOMBR_SEQ_INDEX_MARKETCLASSIFICATION_ID,
	SBRTOMBR_SEQ_INDEX_SEQUENCE,
	SBRTOMBR_SEQ_INDEX_LEVERAGEINVERSE_TYPE_CODE,
	SBRTOMBR_SEQ_LAST_SETTLEMENTMETHOD_CODE,
	SBRTOMBR_SEQ_LAST_TRADING_DATE,
	SBRTOMBR_SEQ_RIGHTS_TYPE_CODE,
	SBRTOMBR_SEQ_EXERCISE_PRICE,
	SBRTOMBR_SEQ_ISSUING_MARKETPARTICIPANT_NUMBER,
	SBRTOMBR_SEQ_ELW_CONVERSIONRATIO,
	SBRTOMBR_SEQ_ELW_PAYMENT_AGENTNAME,
	SBRTOMBR_SEQ_ELW_PAYMENT_DATE,
	SBRTOMBR_SEQ_SUBSCRIPTION_RIGHTSDELISTING_DATE,
	SBRTOMBR_SEQ_ANNUAL_BASE_DAYS,
	SBRTOMBR_SEQ_REPO_BASE_SYMBOLCODE,
	SBRTOMBR_SEQ_REPO_PERIOD,
	SBRTOMBR_SEQ_REPO_REAL_PERIOD,
	SBRTOMBR_SEQ_REPO_HAIRCUT_RATIO,
	SBRTOMBR_SEQ_MARKET_VALUE_PRICE,
	SBRTOMBR_SEQ_SETTLEMENT_DATE,
	SBRTOMBR_SEQ_FOREIGN_BUY_SIDEPOSSIBLE_QUANTITY,
	SBRTOMBR_SEQ_FOREIGNER_HOLDINGSHARES,
	SBRTOMBR_SEQ_FOREIGNER_ORDER_LIMITQUANTITY,
	SBRTOMBR_SEQ_SYMBOL_ADMINISTRATIVE_STATUSCODE,
	SBRTOMBR_SEQ_SYMBOL_TRADINGMETHOD_STATUS_CODE,
	SBRTOMBR_SEQ_SYMBOL_TRADINGSANCTION_STATUS_CODE
};
#pragma endregion

#define LENGTH_BOARD_EVENT_ID							3
#define LENGTH_BOARD_EVENT_STARTTIME					9

#define LENGTH_BUSINESS_CALENDARDAY_ID					10
#define LENGTH_HOLIDAY_DATE								8
#define LENGTH_HOLIDAY_NAME								120
#define LENGTH_HOLIDAY_TYPE_CODE						1

#define LENGTH_MEMBER_ID								5
#define LENGTH_TRADER_NUMBER							5
#define LENGTH_TRADER_NAME								120

#define LENGTH_MARKET_MAKINGCONTRACT_CODE				12
#define LENGTH_MARKET_MAKINGSTARTING_DATE				8
#define LENGTH_MARKET_MAKINGENDING_DATE					8
#define LENGTH_MARKET_MAKINGPERMISSION_DIRECTIONCODE	1

#define LENGTH_INDEX_NAME								120
#define LENGTH_INDEX_ENGLISH_NAME						80
#define LENGTH_INDEX_ASSETCLASSIFICATION_ID1			6
#define LENGTH_INDEX_ASSETCLASSIFICATION_ID2			6
#define LENGTH_MARKET_INDEX_CLASS						1
#define LENGTH_INDEX_TYPE_CODE							8

#define LENGTH_INTEREST_PAYMENT_DATE					8
#define LENGTH_REAL_INTEREST_PAYMENTDATE				8
#define LENGTH_INTEREST_PAYMENTAMOUNT					23
#define LENGTH_PRINCIPAL_PAYMENTAMOUNT					23
#define LENGTH_COUPON_RATE								14

#define LENGTH_PRICE_INTEGER_SUB_PARTVALID_CIPHER		3
#define LENGTH_PRICE_DECIMAL_SUBPART_VALID_CIPHER		3
#define LENGTH_FIRST_TRADING_DATE						8

enum DelistedInstrument{
	DELINS_SEQ_TRANSACTION_CODE = 1,
	DELINS_SEQ_SEQUENCE_NUMBER,
	DELINS_SEQ_BUSINESS_DATE,
	DELINS_SEQ_MARKET_ID,
	DELINS_SEQ_SYMBOL,
	DELINS_SEQ_PRODUCT_ID,
	DELINS_SEQ_SYMBOL_SHORT_CODE,
	DELINS_SEQ_SYMBOL_NAME,
	DELINS_SEQ_SYMBOL_ABBREVIATION,
	DELINS_SEQ_SYMBOL_ENGLISHNAME,
	DELINS_SEQ_SYMBOL_ENGLISH_ABBREVIATION,
	DELINS_SEQ_LISTING_DATE
};

enum TradingSchedule{
	TRADINGSCHE_SEQ_TRANSACTION_CODE = 1,
	TRADINGSCHE_SEQ_SEQUENCE_NUMBER,
	TRADINGSCHE_SEQ_BUSINESS_DATE,
	TRADINGSCHE_SEQ_MARKET_ID,
	TRADINGSCHE_SEQ_PRODUCT_GROUP_ID,
	TRADINGSCHE_SEQ_BOARD_ID,
	TRADINGSCHE_SEQ_BOARD_EVENT_ID,
	TRADINGSCHE_SEQ_BOARD_EVENT_STARTTIME
};

enum Holiday{
	HOLIDAY_SEQ_TRANSACTION_CODE = 1,
	HOLIDAY_SEQ_SEQUENCE_NUMBER,
	HOLIDAY_SEQ_BUSINESS_DATE,
	HOLIDAY_SEQ_BUSINESS_CALENDARDAY_ID,
	HOLIDAY_SEQ_HOLIDAY_DATE,
	HOLIDAY_SEQ_HOLIDAY_NAME,
	HOLIDAY_SEQ_HOLIDAY_TYPE_CODE
};

enum MemberTrader {
	MEMBERTRADER_SEQ_TRANSACTION_CODE = 1,
	MEMBERTRADER_SEQ_SEQUENCE_NUMBER,
	MEMBERTRADER_SEQ_BUSINESS_DATE,
	MEMBERTRADER_SEQ_MEMBER_ID,
	MEMBERTRADER_SEQ_TRADER_NUMBER,
	MEMBERTRADER_SEQ_TRADER_NAME
};

enum MarketMakingContract{
	MMC_SEQ_TRANSACTION_CODE = 1,
	MMC_SEQ_SEQUENCE_NUMBER,
	MMC_SEQ_BUSINESS_DATE,
	MMC_SEQ_MARKET_ID,
	MMC_SEQ_MARKET_MAKINGCONTRACT_CODE,
	MMC_SEQ_MEMBER_ID,
	MMC_SEQ_MARKET_MAKINGSTARTING_DATE,
	MMC_SEQ_MARKET_MAKINGENDING_DATE,
	MMC_SEQ_MARKET_MAKINGPERMISSION_DIRECTIONCODE
};

enum ETFIndexComposition{
	ETFINCOM_SEQ_TRANSACTION_CODE = 1,
	ETFINCOM_SEQ_SEQUENCE_NUMBER,
	ETFINCOM_SEQ_BUSINESS_DATE,
	ETFINCOM_SEQ_INDEX_CALCULATIONINSTITUTION_CODE,
	ETFINCOM_SEQ_INDEX_MARKETCLASSIFICATION_ID,
	ETFINCOM_SEQ_INDEX_SEQUENCE,
	ETFINCOM_SEQ_INDEX_LEVERAGEINVERSE_TYPE_CODE,
	ETFINCOM_SEQ_INDEX_NAME,
	ETFINCOM_SEQ_INDEX_ENGLISH_NAME,
	ETFINCOM_SEQ_INDEX_ASSETCLASSIFICATION_ID1,
	ETFINCOM_SEQ_INDEX_ASSETCLASSIFICATION_ID2,
	ETFINCOM_SEQ_MARKET_INDEX_CLASS,
	ETFINCOM_SEQ_INDEX_TYPE_CODE
};

enum CouponPaymentDate{
	COUPPAYDATE_SEQ_TRANSACTION_CODE = 1,
	COUPPAYDATE_SEQ_SEQUENCE_NUMBER,
	COUPPAYDATE_SEQ_BUSINESS_DATE,
	COUPPAYDATE_SEQ_MARKET_ID,
	COUPPAYDATE_SEQ_SYMBOL,
	COUPPAYDATE_SEQ_INTEREST_PAYMENT_DATE,
	COUPPAYDATE_SEQ_REAL_INTEREST_PAYMENTDATE,
	COUPPAYDATE_SEQ_EX_INTEREST_DATE,
	COUPPAYDATE_SEQ_INTEREST_PAYMENTAMOUNT,
	COUPPAYDATE_SEQ_PRINCIPAL_PAYMENTAMOUNT,
	COUPPAYDATE_SEQ_COUPON_RATE
};

#pragma region MapChangeOfContract

static std::map<int, int> g_MapChangeOfContract = {
	{ COC_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ COC_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ COC_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ COC_SEQ_BOARD_ID, LENGTH_BOARD_ID },
	{ COC_SEQ_SYMBOL, LENGTH_SYMBOL },
	{ COC_SEQ_REPO_BASE_SYMBOLCODE, LENGTH_REPO_BASE_SYMBOLCODE },
	{ COC_SEQ_TRADE_NUMBER, LENGTH_TRADE_NUMBER },
	{ COC_SEQ_1ST_TRADING_DATE, LENGTH_1ST_TRADING_DATE },
	{ COC_SEQ_2ND_TRADING_DATE, LENGTH_2ND_TRADING_DATE },
	{ COC_SEQ_SETTLEMENT_DATE, LENGTH_SETTLEMENT_DATE },
	{ COC_SEQ_REPO_REAL_PERIOD, LENGTH_REPO_REAL_PERIOD },
	{ COC_SEQ_TRADE_PRICE, LENGTH_TRADE_PRICE },
	{ COC_SEQ_TRADE_QUANTITY, LENGTH_TRADE_QUANTITY },
	{ COC_SEQ_TRADING_VALUE, LENGTH_TRADING_VALUE },
	{ COC_SEQ_REPURCHASEMENT_AMOUNT, LENGTH_REPURCHASEMENT_AMOUNT },
	{ COC_SEQ_REPO_CONTRACT_CHANGE_REASON, LENGTH_REPO_CONTRACT_CHANGE_REASON },
	{ COC_SEQ_MEMBER_NUMBER, LENGTH_MEMBER_NUMBER },
	{ COC_SEQ_TRADER_ID, LENGTH_TRADER_ID },
	{ COC_SEQ_ORDER_ID, LENGTH_ORDER_ID }
};
#pragma endregion

#pragma region MapDToMBR

static std::map<int, int> g_MapDToMBR = {
	{ DTOMBR_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ DTOMBR_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ DTOMBR_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ DTOMBR_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ DTOMBR_SEQ_SYMBOL, LENGTH_SYMBOL },
	{ DTOMBR_SEQ_BOARD_ID, LENGTH_BOARD_ID },
	{ DTOMBR_SEQ_SECURITY_EXCHANGE, LENGTH_SECURITY_EXCHANGE },
	{ DTOMBR_SEQ_PRODUCT_GROUP_ID, LENGTH_PRODUCT_GROUP_ID },
	{ DTOMBR_SEQ_SYMBOL_SHORT_CODE, LENGTH_SYMBOL_SHORT_CODE },
	{ DTOMBR_SEQ_SECURITY_GROUP_ID, LENGTH_SECURITY_GROUP_ID },
	{ DTOMBR_SEQ_TRADING_CURRENCY_ID, LENGTH_TRADING_CURRENCY_ID },
	{ DTOMBR_SEQ_PRODUCT_ID, LENGTH_PRODUCT_ID },
	{ DTOMBR_SEQ_TICKER_CODE, LENGTH_TICKER_CODE },
	{ DTOMBR_SEQ_SYMBOL_NAME, LENGTH_SYMBOL_NAME },
	{ DTOMBR_SEQ_SYMBOL_ABBREVIATION, LENGTH_SYMBOL_ABBREVIATION },
	{ DTOMBR_SEQ_SYMBOL_ENGLISHNAME, LENGTH_SYMBOL_ENGLISHNAME },
	{ DTOMBR_SEQ_SYMBOL_ENGLISH_ABBREVIATION, LENGTH_SYMBOL_ENGLISH_ABBREVIATION },
	{ DTOMBR_SEQ_LISTING_DATE, LENGTH_LISTING_DATE },
	{ DTOMBR_SEQ_TRADING_CURRENCYISO_CODE, LENGTH_TRADING_CURRENCYISO_CODE },
	{ DTOMBR_SEQ_SETTLEMENT_MULTIPLIER, LENGTH_SETTLEMENT_MULTIPLIER },
	{ DTOMBR_SEQ_PRICE_INTEGER_SUB_PARTVALID_CIPHER, LENGTH_PRICE_INTEGER_SUB_PARTVALID_CIPHER },
	{ DTOMBR_SEQ_PRICE_DECIMAL_SUBPART_VALID_CIPHER, LENGTH_PRICE_DECIMAL_SUBPART_VALID_CIPHER },
	{ DTOMBR_SEQ_CLOSING_PRICE, LENGTH_CLOSING_PRICE },
	{ DTOMBR_SEQ_CLOSING_PRICE_TYPECODE, LENGTH_CLOSING_PRICE_TYPECODE },
	{ DTOMBR_SEQ_FIRST_TRADING_DATE, LENGTH_FIRST_TRADING_DATE },
	{ DTOMBR_SEQ_REFERENCE_PRICE, LENGTH_REFERENCE_PRICE },
	{ DTOMBR_SEQ_UPPER_LIMIT_PRICE, LENGTH_UPPER_LIMIT_PRICE },
	{ DTOMBR_SEQ_LOWER_LIMIT_PRICE, LENGTH_LOWER_LIMIT_PRICE },
	{ DTOMBR_SEQ_MARKET_MAKINGPOSSIBLE_YN, LENGTH_MARKET_MAKINGPOSSIBLE_YN },
	{ DTOMBR_SEQ_HALT_YN, LENGTH_HALT_YN },
	{ DTOMBR_SEQ_LIQUIDATION_TRADING_YN, LENGTH_LIQUIDATION_TRADING_YN },
	{ DTOMBR_SEQ_UNDERLYING_ID, LENGTH_UNDERLYING_ID },
	{ DTOMBR_SEQ_EXPIRATION_MONTH, LENGTH_EXPIRATION_MONTH },
	{ DTOMBR_SEQ_LAST_TRADING_DATE, LENGTH_LAST_TRADING_DATE },
	{ DTOMBR_SEQ_EXPIRATION_DATE, LENGTH_EXPIRATION_DATE },
	{ DTOMBR_SEQ_FINAL_SETTLEMENT_DATE, LENGTH_FINAL_SETTLEMENT_DATE },
	{ DTOMBR_SEQ_LAST_SETTLEMENT_METHOD_CODE, LENGTH_LAST_SETTLEMENT_METHOD_CODE },
	{ DTOMBR_SEQ_EXERCISE_TYPE_CODE, LENGTH_EXERCISE_TYPE_CODE },
	{ DTOMBR_SEQ_ADJUSTMENT_TYPECODE, LENGTH_ADJUSTMENT_TYPECODE },
	{ DTOMBR_SEQ_UNDERLYING_SYMBOLCODE, LENGTH_UNDERLYING_SYMBOLCODE },
	{ DTOMBR_SEQ_REMAINING_DAYS, LENGTH_REMAINING_DAYS },
	{ DTOMBR_SEQ_SETTLEMENT_PRICE, LENGTH_SETTLEMENT_PRICE },
	{ DTOMBR_SEQ_RIGHTS_TYPE_CODE, LENGTH_RIGHTS_TYPE_CODE },
	{ DTOMBR_SEQ_ATM_TYPE_CODE, LENGTH_ATM_TYPE_CODE },
	{ DTOMBR_SEQ_EXERCISE_PRICE, LENGTH_EXERCISE_PRICE },
	{ DTOMBR_SEQ_SPREAD_COMPOSITIONCODE, LENGTH_SPREAD_COMPOSITIONCODE },
	{ DTOMBR_SEQ_SPREAD_COMPOSITION_SYMBOL_CODE_1, LENGTH_SPREAD_COMPOSITION_SYMBOL_CODE_1 },
	{ DTOMBR_SEQ_SPREAD_COMPOSITION_SYMBOL_CODE_2, LENGTH_SPREAD_COMPOSITION_SYMBOL_CODE_2 }
};
#pragma endregion

#pragma region MapSBRToMBR

static std::map<int, int> g_MapSBRToMBR = {
	{ SBRTOMBR_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ SBRTOMBR_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ SBRTOMBR_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ SBRTOMBR_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ SBRTOMBR_SEQ_SYMBOL, LENGTH_SYMBOL },
	{ SBRTOMBR_SEQ_BOARD_ID, LENGTH_BOARD_ID },
	{ SBRTOMBR_SEQ_SECURITY_EXCHANGE, LENGTH_SECURITY_EXCHANGE },
	{ SBRTOMBR_SEQ_PRODUCT_GROUP_ID, LENGTH_PRODUCT_GROUP_ID },
	{ SBRTOMBR_SEQ_SYMBOL_SHORT_CODE, LENGTH_SYMBOL_SHORT_CODE },
	{ SBRTOMBR_SEQ_SECURITY_GROUP_ID, LENGTH_SECURITY_GROUP_ID },
	{ SBRTOMBR_SEQ_TRADING_CURRENCY_ID, LENGTH_TRADING_CURRENCY_ID },
	{ SBRTOMBR_SEQ_PRODUCT_ID, LENGTH_PRODUCT_ID },
	{ SBRTOMBR_SEQ_TICKER_CODE, LENGTH_TICKER_CODE },
	{ SBRTOMBR_SEQ_SYMBOL_NAME, LENGTH_SYMBOL_NAME },
	{ SBRTOMBR_SEQ_SYMBOL_ABBREVIATION, LENGTH_SYMBOL_ABBREVIATION },
	{ SBRTOMBR_SEQ_SYMBOL_ENGLISHNAME, LENGTH_SYMBOL_ENGLISHNAME },
	{ SBRTOMBR_SEQ_SYMBOL_ENGLISH_ABBREVIATION, LENGTH_SYMBOL_ENGLISH_ABBREVIATION },
	{ SBRTOMBR_SEQ_LISTING_DATE, LENGTH_LISTING_DATE },
	{ SBRTOMBR_SEQ_TRADING_CURRENCYISO_CODE, LENGTH_TRADING_CURRENCYISO_CODE },
	{ SBRTOMBR_SEQ_PRICE_INTEGER_SUB_PARTVALID_CIPHER, LENGTH_PRICE_INTEGER_SUB_PARTVALID_CIPHER },
	{ SBRTOMBR_SEQ_PRICE_DECIMAL_SUBPART_VALID_CIPHER, LENGTH_PRICE_DECIMAL_SUBPART_VALID_CIPHER },
	{ SBRTOMBR_SEQ_CLOSING_PRICE, LENGTH_CLOSING_PRICE },
	{ SBRTOMBR_SEQ_CLOSING_PRICE_TYPECODE, LENGTH_CLOSING_PRICE_TYPECODE },
	{ SBRTOMBR_SEQ_FIRST_TRADING_DATE, LENGTH_FIRST_TRADING_DATE },
	{ SBRTOMBR_SEQ_VWAP, LENGTH_VWAP },
	{ SBRTOMBR_SEQ_REFERENCE_PRICE, LENGTH_REFERENCE_PRICE },
	{ SBRTOMBR_SEQ_UPPER_LIMIT_PRICE, LENGTH_UPPER_LIMIT_PRICE },
	{ SBRTOMBR_SEQ_LOWER_LIMIT_PRICE, LENGTH_LOWER_LIMIT_PRICE },
	{ SBRTOMBR_SEQ_MARKET_MAKINGPOSSIBLE_YN, LENGTH_MARKET_MAKINGPOSSIBLE_YN },
	{ SBRTOMBR_SEQ_HALT_YN, LENGTH_HALT_YN },
	{ SBRTOMBR_SEQ_LIQUIDATION_TRADING_YN, LENGTH_LIQUIDATION_TRADING_YN },
	{ SBRTOMBR_SEQ_PAR_VALUE, LENGTH_PAR_VALUE },
	{ SBRTOMBR_SEQ_ISSUED_DATE, LENGTH_ISSUED_DATE },
	{ SBRTOMBR_SEQ_LISTED_SHARES, LENGTH_LISTED_SHARES },
	{ SBRTOMBR_SEQ_DELISTED_DATE, LENGTH_DELISTED_DATE },
	{ SBRTOMBR_SEQ_REPRESENTATIVE_SYMBOL_CODE, LENGTH_REPRESENTATIVE_SYMBOL_CODE },
	{ SBRTOMBR_SEQ_STOCK_KIND_CODE, LENGTH_STOCK_KIND_CODE },
	{ SBRTOMBR_SEQ_PRICE_CHANGE_TYPECODE, LENGTH_PRICE_CHANGE_TYPECODE },
	{ SBRTOMBR_SEQ_OFF_TYPE_CODE, LENGTH_OFF_TYPE_CODE },
	{ SBRTOMBR_SEQ_TARGET_STOCK_SYMBOLCODE, LENGTH_TARGET_STOCK_SYMBOLCODE },
	{ SBRTOMBR_SEQ_VALUATION_PRICE, LENGTH_VALUATION_PRICE },
	{ SBRTOMBR_SEQ_LOWEST_ORDER_PRICE, LENGTH_LOWEST_ORDER_PRICE },
	{ SBRTOMBR_SEQ_HIGHEST_ORDER_PRICE, LENGTH_HIGHEST_ORDER_PRICE },
	{ SBRTOMBR_SEQ_REDEMPTION_DATE, LENGTH_REDEMPTION_DATE },
	{ SBRTOMBR_SEQ_BOND_CLASSIFICATIONCODE, LENGTH_BOND_CLASSIFICATIONCODE },
	{ SBRTOMBR_SEQ_ISSUER_ID, LENGTH_ISSUER_ID },
	{ SBRTOMBR_SEQ_CLOSING_PRICE_YIELD, LENGTH_CLOSING_PRICE_YIELD },
	{ SBRTOMBR_SEQ_COUPON_PAYMENTMETHOD_CODE, LENGTH_COUPON_PAYMENTMETHOD_CODE },
	{ SBRTOMBR_SEQ_INTEREST_PAYMENT_CALCULATION_MONTHS, LENGTH_INTEREST_PAYMENT_CALCULATION_MONTHS },
	{ SBRTOMBR_SEQ_ACCRUED_INTEREST_BASEDAYS_TYPE_CODE, LENGTH_ACCRUED_INTEREST_BASEDAYS_TYPE_CODE },
	{ SBRTOMBR_SEQ_DISCOUNT_RATE_BONDBASE_DAYS_TYPE_CODE, LENGTH_DISCOUNT_RATE_BONDBASE_DAYS_TYPE_CODE },
	{ SBRTOMBR_SEQ_DISCOUNT_RATE_BOND_YN, LENGTH_DISCOUNT_RATE_BOND_YN },
	{ SBRTOMBR_SEQ_BOND_INTERESTPAYMENT_DATE_BASETYPE_CODE, LENGTH_BOND_INTERESTPAYMENT_DATE_BASETYPE_CODE },
	{ SBRTOMBR_SEQ_FIRST_INTEREST_PAYMENTDATE, LENGTH_FIRST_INTEREST_PAYMENTDATE },
	{ SBRTOMBR_SEQ_INTEREST_MONTH_ENDTYPE_CODE, LENGTH_INTEREST_MONTH_ENDTYPE_CODE },
	{ SBRTOMBR_SEQ_INTEREST_PRE_PAY_ORPOST_PAY_TYPE_CODE, LENGTH_INTEREST_PRE_PAY_ORPOST_PAY_TYPE_CODE },
	{ SBRTOMBR_SEQ_RISK_BONDREDEMPTION_TYPECODE, LENGTH_RISK_BONDREDEMPTION_TYPECODE },
	{ SBRTOMBR_SEQ_INTEREST_CALCULATION_MINIMUM_PRICE_UNIT, LENGTH_INTEREST_CALCULATION_MINIMUM_PRICE_UNIT },
	{ SBRTOMBR_SEQ_INTEREST_ROUNDINGMETHOD_CODE, LENGTH_INTEREST_ROUNDINGMETHOD_CODE },
	{ SBRTOMBR_SEQ_EX_INTEREST_DATE, LENGTH_EX_INTEREST_DATE },
	{ SBRTOMBR_SEQ_FRN_BASE_INTERESTCODE, LENGTH_FRN_BASE_INTERESTCODE },
	{ SBRTOMBR_SEQ_FRN_SPREAD, LENGTH_FRN_SPREAD },
	{ SBRTOMBR_SEQ_FRN_NEXT_PERIODBASE_INTEREST, LENGTH_FRN_NEXT_PERIODBASE_INTEREST },
	{ SBRTOMBR_SEQ_FRN_AFTER_NEXTPERIOD_BASE_INTEREST, LENGTH_FRN_AFTER_NEXTPERIOD_BASE_INTEREST },
	{ SBRTOMBR_SEQ_INDEX_CALCULATIONINSTITUTION_CODE, LENGTH_INDEX_CALCULATIONINSTITUTION_CODE },
	{ SBRTOMBR_SEQ_INDEX_MARKETCLASSIFICATION_ID, LENGTH_INDEX_MARKETCLASSIFICATION_ID },
	{ SBRTOMBR_SEQ_INDEX_SEQUENCE, LENGTH_INDEX_SEQUENCE },
	{ SBRTOMBR_SEQ_INDEX_LEVERAGEINVERSE_TYPE_CODE, LENGTH_INDEX_LEVERAGEINVERSE_TYPE_CODE },
	{ SBRTOMBR_SEQ_LAST_SETTLEMENTMETHOD_CODE, LENGTH_LAST_SETTLEMENTMETHOD_CODE },
	{ SBRTOMBR_SEQ_LAST_TRADING_DATE, LENGTH_LAST_TRADING_DATE },
	{ SBRTOMBR_SEQ_RIGHTS_TYPE_CODE, LENGTH_RIGHTS_TYPE_CODE },
	{ SBRTOMBR_SEQ_EXERCISE_PRICE, LENGTH_EXERCISE_PRICE },
	{ SBRTOMBR_SEQ_ISSUING_MARKETPARTICIPANT_NUMBER, LENGTH_ISSUING_MARKETPARTICIPANT_NUMBER },
	{ SBRTOMBR_SEQ_ELW_CONVERSIONRATIO, LENGTH_ELW_CONVERSIONRATIO },
	{ SBRTOMBR_SEQ_ELW_PAYMENT_AGENTNAME, LENGTH_ELW_PAYMENT_AGENTNAME },
	{ SBRTOMBR_SEQ_ELW_PAYMENT_DATE, LENGTH_ELW_PAYMENT_DATE },
	{ SBRTOMBR_SEQ_SUBSCRIPTION_RIGHTSDELISTING_DATE, LENGTH_SUBSCRIPTION_RIGHTSDELISTING_DATE },
	{ SBRTOMBR_SEQ_ANNUAL_BASE_DAYS, LENGTH_ANNUAL_BASE_DAYS },
	{ SBRTOMBR_SEQ_REPO_BASE_SYMBOLCODE, LENGTH_REPO_BASE_SYMBOLCODE },
	{ SBRTOMBR_SEQ_REPO_PERIOD, LENGTH_REPO_PERIOD },
	{ SBRTOMBR_SEQ_REPO_REAL_PERIOD, LENGTH_REPO_REAL_PERIOD },
	{ SBRTOMBR_SEQ_REPO_HAIRCUT_RATIO, LENGTH_REPO_HAIRCUT_RATIO },
	{ SBRTOMBR_SEQ_MARKET_VALUE_PRICE, LENGTH_MARKET_VALUE_PRICE },
	{ SBRTOMBR_SEQ_SETTLEMENT_DATE, LENGTH_SETTLEMENT_DATE },
	{ SBRTOMBR_SEQ_FOREIGN_BUY_SIDEPOSSIBLE_QUANTITY, LENGTH_FOREIGN_BUY_SIDEPOSSIBLE_QUANTITY },
	{ SBRTOMBR_SEQ_FOREIGNER_HOLDINGSHARES, LENGTH_FOREIGNER_HOLDINGSHARES },
	{ SBRTOMBR_SEQ_FOREIGNER_ORDER_LIMITQUANTITY, LENGTH_FOREIGNER_ORDER_LIMITQUANTITY },
	{ SBRTOMBR_SEQ_SYMBOL_ADMINISTRATIVE_STATUSCODE, LENGTH_SYMBOL_ADMINISTRATIVE_STATUSCODE },
	{ SBRTOMBR_SEQ_SYMBOL_TRADINGMETHOD_STATUS_CODE, LENGTH_SYMBOL_TRADINGMETHOD_STATUS_CODE },
	{ SBRTOMBR_SEQ_SYMBOL_TRADINGSANCTION_STATUS_CODE, LENGTH_SYMBOL_TRADINGSANCTION_STATUS_CODE }
};
#pragma endregion

#pragma region MapDelistedInstrument

static std::map<int, int> g_MapDelistedInstrument = {
	{ DELINS_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ DELINS_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ DELINS_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ DELINS_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ DELINS_SEQ_SYMBOL, LENGTH_SYMBOL },
	{ DELINS_SEQ_PRODUCT_ID, LENGTH_PRODUCT_ID },
	{ DELINS_SEQ_SYMBOL_SHORT_CODE, LENGTH_SYMBOL_SHORT_CODE },
	{ DELINS_SEQ_SYMBOL_NAME, LENGTH_SYMBOL_NAME },
	{ DELINS_SEQ_SYMBOL_ABBREVIATION, LENGTH_SYMBOL_ABBREVIATION },
	{ DELINS_SEQ_SYMBOL_ENGLISHNAME, LENGTH_SYMBOL_ENGLISHNAME },
	{ DELINS_SEQ_SYMBOL_ENGLISH_ABBREVIATION, LENGTH_SYMBOL_ENGLISH_ABBREVIATION },
	{ DELINS_SEQ_LISTING_DATE, LENGTH_LISTING_DATE }
};
#pragma endregion

#pragma region MapTradingSchedule

static std::map<int, int> g_MapTradingSchedule = {
	{ TRADINGSCHE_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ TRADINGSCHE_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ TRADINGSCHE_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ TRADINGSCHE_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ TRADINGSCHE_SEQ_PRODUCT_GROUP_ID, LENGTH_PRODUCT_GROUP_ID },
	{ TRADINGSCHE_SEQ_BOARD_ID, LENGTH_BOARD_ID },
	{ TRADINGSCHE_SEQ_BOARD_EVENT_ID, LENGTH_BOARD_EVENT_ID },
	{ TRADINGSCHE_SEQ_BOARD_EVENT_STARTTIME, LENGTH_BOARD_EVENT_STARTTIME }
};
#pragma endregion

#pragma region MapHoliday

static std::map<int, int> g_MapHoliday = {
	{ HOLIDAY_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ HOLIDAY_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ HOLIDAY_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ HOLIDAY_SEQ_BUSINESS_CALENDARDAY_ID, LENGTH_BUSINESS_CALENDARDAY_ID },
	{ HOLIDAY_SEQ_HOLIDAY_DATE, LENGTH_HOLIDAY_DATE },
	{ HOLIDAY_SEQ_HOLIDAY_NAME, LENGTH_HOLIDAY_NAME },
	{ HOLIDAY_SEQ_HOLIDAY_TYPE_CODE, LENGTH_HOLIDAY_TYPE_CODE }
};
#pragma endregion

#pragma region MapMemberTrader

static std::map<int, int> g_MapMemberTrader = {
	{ MEMBERTRADER_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ MEMBERTRADER_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ MEMBERTRADER_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ MEMBERTRADER_SEQ_MEMBER_ID, LENGTH_MEMBER_ID },
	{ MEMBERTRADER_SEQ_TRADER_NUMBER, LENGTH_TRADER_NUMBER },
	{ MEMBERTRADER_SEQ_TRADER_NAME, LENGTH_TRADER_NAME }
};
#pragma endregion

#pragma region MapMarketMakingContract

static std::map<int, int> g_MapMarketMakingContract = {
	{ MMC_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ MMC_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ MMC_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ MMC_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ MMC_SEQ_MARKET_MAKINGCONTRACT_CODE, LENGTH_MARKET_MAKINGCONTRACT_CODE },
	{ MMC_SEQ_MEMBER_ID, LENGTH_MEMBER_ID },
	{ MMC_SEQ_MARKET_MAKINGSTARTING_DATE, LENGTH_MARKET_MAKINGSTARTING_DATE },
	{ MMC_SEQ_MARKET_MAKINGENDING_DATE, LENGTH_MARKET_MAKINGENDING_DATE },
	{ MMC_SEQ_MARKET_MAKINGPERMISSION_DIRECTIONCODE, LENGTH_MARKET_MAKINGPERMISSION_DIRECTIONCODE }
};
#pragma endregion

#pragma region MapETFIndexComposition

static std::map<int, int> g_MapETFIndexComposition = {
	{ ETFINCOM_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ ETFINCOM_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ ETFINCOM_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ ETFINCOM_SEQ_INDEX_CALCULATIONINSTITUTION_CODE, LENGTH_INDEX_CALCULATIONINSTITUTION_CODE },
	{ ETFINCOM_SEQ_INDEX_MARKETCLASSIFICATION_ID, LENGTH_INDEX_MARKETCLASSIFICATION_ID },
	{ ETFINCOM_SEQ_INDEX_SEQUENCE, LENGTH_INDEX_SEQUENCE },
	{ ETFINCOM_SEQ_INDEX_LEVERAGEINVERSE_TYPE_CODE, LENGTH_INDEX_LEVERAGEINVERSE_TYPE_CODE },
	{ ETFINCOM_SEQ_INDEX_NAME, LENGTH_INDEX_NAME },
	{ ETFINCOM_SEQ_INDEX_ENGLISH_NAME, LENGTH_INDEX_ENGLISH_NAME },
	{ ETFINCOM_SEQ_INDEX_ASSETCLASSIFICATION_ID1, LENGTH_INDEX_ASSETCLASSIFICATION_ID1 },
	{ ETFINCOM_SEQ_INDEX_ASSETCLASSIFICATION_ID2, LENGTH_INDEX_ASSETCLASSIFICATION_ID2 },
	{ ETFINCOM_SEQ_MARKET_INDEX_CLASS, LENGTH_MARKET_INDEX_CLASS },
	{ ETFINCOM_SEQ_INDEX_TYPE_CODE, LENGTH_INDEX_TYPE_CODE }
};
#pragma endregion

#pragma region MapCouponPaymentDate

static std::map<int, int> g_MapCouponPaymentDate = {
	{ COUPPAYDATE_SEQ_TRANSACTION_CODE, LENGTH_TRANSACTION_CODE },
	{ COUPPAYDATE_SEQ_SEQUENCE_NUMBER, LENGTH_SEQUENCE_NUMBER },
	{ COUPPAYDATE_SEQ_BUSINESS_DATE, LENGTH_BUSINESS_DATE },
	{ COUPPAYDATE_SEQ_MARKET_ID, LENGTH_MARKET_ID },
	{ COUPPAYDATE_SEQ_SYMBOL, LENGTH_SYMBOL },
	{ COUPPAYDATE_SEQ_INTEREST_PAYMENT_DATE, LENGTH_INTEREST_PAYMENT_DATE },
	{ COUPPAYDATE_SEQ_REAL_INTEREST_PAYMENTDATE, LENGTH_REAL_INTEREST_PAYMENTDATE },
	{ COUPPAYDATE_SEQ_EX_INTEREST_DATE, LENGTH_EX_INTEREST_DATE },
	{ COUPPAYDATE_SEQ_INTEREST_PAYMENTAMOUNT, LENGTH_INTEREST_PAYMENTAMOUNT },
	{ COUPPAYDATE_SEQ_PRINCIPAL_PAYMENTAMOUNT, LENGTH_PRINCIPAL_PAYMENTAMOUNT },
	{ COUPPAYDATE_SEQ_COUPON_RATE, LENGTH_COUPON_RATE }
};
#pragma endregion


static std::map<std::string, std::map<int, int>> g_FileMapData = {
	{ CODE_CHANGE_OF_CONTRACT, g_MapChangeOfContract },
	{ CODE_D_TO_MBR, g_MapDToMBR },
	{ CODE_SBR_TO_MBR, g_MapSBRToMBR },
	{ CODE_DELISTED_INSTRUMENT, g_MapDelistedInstrument },
	{ CODE_TRADING_SCHEDULE, g_MapTradingSchedule },
	{ CODE_HOLIDAY, g_MapHoliday },
	{ CODE_MEMBER_TRADER, g_MapMemberTrader },
	{ CODE_MARKET_MAKING_CONTRACT, g_MapMarketMakingContract },
	{ CODE_ETF_INDEX_COMPOSITION, g_MapETFIndexComposition },
	{ CODE_COUPON_PAYMENT_DATE, g_MapCouponPaymentDate }
};